#!/usr/bin/env perl

# opens jira tickets based on config file in $HOME/.config/jira-ticket.txt,
# args are handled in order left-to-right
#
#     j 100            # opens ticket 100 in the default project
#
#     j 200 foo 300    # opens ticket 200 in the default project, switches
#                      # default to first project starting with "foo", then
#                      # opens ticket 300 in that project
#
#     j me             # open JQL for your tickets
#
# options
#
#     -l, --list      list configured projects with the default project
#                     first, then the root jira url
#     -p, --print     print urls instead of opening them

use strict;
use warnings;

my $f = "$ENV{HOME}/.config/jira-ticket.txt";
open my $fh, $f or die "error: need a config file at $f\n";
chomp(my @lines = grep { /^\s*\w/ } <$fh>);
my $root = shift @lines; # first line is the root url for viewing jira tickets
my $key = $lines[0];     # rest of the lines are jira project keys, with first one being our default
my $open = 1;

sub handle_url {
    my ($url) = @_;
    if ($open) {
        system "open '$url'";
    }
    else {
        print "$url\n";
    }
}

while ($_ = shift @ARGV) {
    if (/^\d/) {
        handle_url("$root/browse/" . uc($key) . "-$_");
    }
    elsif (/^(-l|--list)/) {
        print "@lines $root\n";
    }
    elsif (/^(-p|--print)/) {
        $open = 0;
    }
    elsif (/^me$/i) {
        handle_url($root . '/issues/?jql=watcher%20%3D%20currentUser()%20or%20assignee%20%3D%20currentUser()%20or%20reporter%20%3D%20currentUser()%20order%20by%20updated%20DESC');
    }
    else {
        my $re = qr/^\Q$_/i;
        my @hits = grep { $_ =~ $re } @lines;
        if (@hits == 1) {
            $key = $hits[0];
        }
        elsif (@hits == 0) {
            die "'$_' doesn't match any projects: @lines\n";
        }
        else {
            die "'$_' matches more than one project: @hits\n";
        }
    }
}
