#!/bin/bash

# Stitch two images together with optional captions
# Copyright kray.me 2019

VERTICAL=''

usage() {
    echo "Usage: $0 [OPTIONS] IMAGE_1 IMAGE2
Stitch two images and put captions below. Image path is echo'd to stdout,
and the image itself is copied to the pasteboard.

OPTIONS
  -l,  --labels     Add labels separated by comma. eg: before,after
  -c,  --clipboard  Use most recent images from Alfred Clipboard history
  -C,  --clipswap   --clipboard the images in the opposite order
  -v,  --vertical   Combine images vertically instead of horizontally

The default order of --clipboard is:

    Horizontal: [ second most recent ] [ most recent]

    Vertical:   [ second most recent ]
                [ most recent ]"
}

add_border_caption() {
    local IMG="${1}"
    local CAPTION="${2}"
    local COLOR="${3}"
    local IMG_EXT="${IMG##*.}"
    local IMG_BORDER=$(mktemp /tmp/tmp.XXXXX)".$IMG_EXT"
    if [ -n "$CAPTION" ]; then
        convert "$IMG" -bordercolor black -border 1 -background "$COLOR" label:"$CAPTION" -gravity Center -append "$IMG_BORDER"
    else
        convert "$IMG" -bordercolor black -border 1 "$IMG_BORDER"
    fi
    echo ${IMG_BORDER}
}

# $1 - first image
# $1 - second image
imgimg() {
    local IMG1="${1}"
    local IMG2="${2}"
    IFS="," read -ra LABEL1 <<< "${LABELS}";
    local LABEL2=`echo ${LABELS##*,}`
    local IMG1_BORDER=$(add_border_caption "$IMG1" "$LABEL1" Khaki)
    local IMG2_BORDER=$(add_border_caption "$IMG2" "$LABEL2" Plum)
    local OUT=$(mktemp /tmp/tmp.XXXXX).png

    if [ -n "$VERTICAL" ]; then
        cmd='-append -gravity west'
    else
        cmd='+append -gravity south'
    fi
    convert $cmd -background none "$IMG1_BORDER" "$IMG2_BORDER" "$OUT"
    echo "$OUT"
    pngcopy "$OUT"
}

sql() {
    root="$1"
    offset="$2"
    f=$(sqlite3 "$root/clipboard.alfdb" 'select dataHash from clipboard where dataHash like "%.tiff" order by ts desc limit 1 offset '"$offset")
    echo "$root/clipboard.alfdb.data/$f"
}

main() {
    LABELS=''
    CLIPBOARD=''
    CLIPSWAP=''
    images=()
    while [ $# -gt 0 ];do
        case "$1" in
            -h|--help)
                usage;
                exit 0;;
            -l|--labels)
                LABELS=$1
                ;;
            -c|--clipboard)
                CLIPBOARD=1
                ;;
            -C|--clipswap)
                CLIPBOARD=1
                CLIPSWAP=1
                ;;
            -v|--vertical)
                VERTICAL=1
                ;;
            *)
                images+=("$1")
                ;;
        esac
        shift
    done

    if [[ -n "$CLIPBOARD" ]]; then
        alf="$HOME/Library/Application Support/Alfred 3/Databases"
        if [[ -n "$CLIPSWAP" ]]; then
            imgimg "$(sql "$alf" 0)" "$(sql "$alf" 1)"
        else
            imgimg "$(sql "$alf" 1)" "$(sql "$alf" 0)"
        fi
        exit 0
    fi

    if (( "${#images[@]}" != 2 )); then
        echo "error: missing two filenames"
        usage
        exit 1
    fi

    imgimg "${images[0]}" "${images[1]}"
}

main "$@"
