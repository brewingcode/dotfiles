# OSX-only stuff. Abort if not OSX.
is_osx || return 1

# https://unix.stackexchange.com/a/221988
ulimit -n 10000

export PATH="/usr/local/bin:/usr/local/opt/python2/libexec/bin:$PATH"

# Trim new lines and copy to clipboard
alias c="tr -d '\n' | pbcopy"

# Make 'less' more.
[[ "$(type -P lesspipe.sh)" ]] && eval "$(lesspipe.sh)"

# Start ScreenSaver. This will lock the screen if locking is enabled.
alias ss="open /System/Library/Frameworks/ScreenSaver.framework/Versions/A/Resources/ScreenSaverEngine.app"

# restart wifi
function rswifi {
  ifc="${1:-en0}"
  networksetup -setairportpower "$ifc" off
  sleep 15
  networksetup -setairportpower "$ifc" on
}

# restart a Macports daemon
function portre {
  sudo port unload $1
  sudo port load $1
}

# list all launchd's
function launchds {
  find /Library/Launch* /System/Library/Launch* $HOME/Library/Launch* -ls | perl -lpe 's/^\d+\s+\d+\s+//'
}

# fire up boot2docker, and prepare shell for running commands in it
function dockup {
  boot2docker up >/dev/null 2>&1
  eval "$(boot2docker shellinit 2>/dev/null)" >/dev/null 2>&1
}

code () { VSCODE_CWD="$PWD" open -n -b "com.microsoft.VSCode" --args $* ;}

# prettify Chrome's "copy as curl" command line
function recurl {
  pbpaste | perl -lpe '
    s/^curl ('\''.*?'\'')/curl /;
    $_ .= " \\\n $1";
    s/ -H/ \\\n  -H/g;
  '
}

alias clc="fc -ln -1 | awk '{\$1=\$1}1' | pbcopy"

function vjq {
  tmp=/tmp/$(openssl rand -hex 16)
  pbpaste > $tmp
  vim $tmp
  echo "wrote json to $tmp"
  jq . < $tmp
}

# switch java versions via OSX's java_home
jvm() {
  version=${1:-1.6}
  export JAVA_HOME=$(/usr/libexec/java_home -v $version)
}

# open a url in Chrome with minimal UI
minchr() {
  [ -z "$1" ] && { echo "url required" >&2; return 1; }
  /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app="$1"
}

# copies the latest jquery into clipboard, so you can then paste it into a
# browser dev console and get jquery in your page
jquery() {
  curl -qs 'https://code.jquery.com/jquery-3.1.1.slim.min.js' | pbcopy
}

# start a completely new Chrome instance
# NOTE: extra args are passed through to Chrome.app, eg:
#   newchr --disable-extensions
newchr() {
  user_dir="/tmp/$(openssl rand -hex 5)"
  mkdir -p "$user_dir"
  echo "temporary user data dir: $user_dir"
  open -na 'Google Chrome' --args --user-data-dir="$user_dir" $*
}

# tail the time machine system messages, reformatted to cut out junk
tmlog() {
  log stream --predicate 'subsystem == "com.apple.TimeMachine"' --info | \
    perl -lane '
      if (/^\d{4}/) {
        my $x = @F - 1;
        my ($t) = $F[1] =~ /^(.*)\./;
        print join(" ", (@F[0], $t, @F[9..$x]));
      }
      else {
        print;
      }
    '
}

